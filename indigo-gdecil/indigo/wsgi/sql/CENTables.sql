-- Generated by Ora2Pg, the Oracle database Schema converter, version 13.0
-- Copyright 2000-2014 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=gippo-PC;sid=XE

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON


CREATE TABLE cen_reaction_steps (
	step_key varchar(256) NOT NULL,
	page_key varchar(256),
	seq_num smallint DEFAULT 0,
	rxn_scheme_key varchar(256),
	xml_metadata xml,
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_reaction_steps ADD PRIMARY KEY (step_key);
CREATE INDEX cen_reaction_steps_i1 ON cen_reaction_steps (page_key);
CREATE INDEX cen_reaction_steps_i2 ON cen_reaction_steps (rxn_scheme_key);

CREATE TABLE dr$idx_procedure$i (
	token_text varchar(64) NOT NULL,
	token_type bigint NOT NULL,
	token_first bigint NOT NULL,
	token_last bigint NOT NULL,
	token_count bigint NOT NULL,
	token_info bytea
);
CREATE INDEX dr$idx_procedure$x ON dr$idx_procedure$i (token_text,token_type,token_first,token_last,token_count);

CREATE TABLE dr$idx_procedure$r (
	row_no smallint,
	data bytea
);


CREATE TABLE dr$idx_procedure$n (
	nlt_docid bigint NOT NULL,
	nlt_mark char(1) NOT NULL
);
ALTER TABLE dr$idx_procedure$n ADD PRIMARY KEY (nlt_docid);


CREATE TABLE cen_temp_next_experiment (
	notebook varchar(8) NOT NULL,
	next_experiment varchar(4) NOT NULL,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_temp_next_experiment ADD UNIQUE (notebook,next_experiment);


CREATE TABLE cen_structures (
	struct_key varchar(256) NOT NULL,
	page_key varchar(256),
	struct_sketch bytea DEFAULT EMPTY_BLOB(),
	native_struct_sketch bytea DEFAULT EMPTY_BLOB(),
	struct_image bytea DEFAULT EMPTY_BLOB(),
	xml_metadata xml,
	chemical_name varchar(400),
	molecular_formula varchar(100),
	molecular_weight bigint,
	virtual_compound_id varchar(50),
	registration_number varchar(50),
	cas_number varchar(20),
	struct_skth_frmt varchar(15),
	native_struct_skth_frmt varchar(15),
	struct_image_frmt varchar(15),
	user_hazard_comments varchar(4000),
	struct_comments varchar(200),
	stereoisomer_code varchar(10),
	compound_name varchar(400),
	boiling_pt_value bigint,
	boiling_pt_unit_code varchar(5),
	melting_pt_value bigint,
	melting_pt_unit_code varchar(5),
	created_by_notebook varchar(5),
	exact_mass bigint,
	compound_parent_id varchar(25),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp,
	stoich_comments varchar(100)
);
ALTER TABLE cen_structures ADD PRIMARY KEY (struct_key);
CREATE INDEX cen_structures_i5 ON cen_structures (virtual_compound_id);
CREATE INDEX cen_str_upper_reg_num ON cen_structures ();
CREATE INDEX cen_structures_i3 ON cen_structures (registration_number);
CREATE INDEX cen_str_upper_chem_name ON cen_structures ();
CREATE INDEX cen_structures_i4 ON cen_structures (chemical_name);
CREATE INDEX cen_structures_i1 ON cen_structures (page_key);

CREATE TABLE cen_pages (
	page_key varchar(256) NOT NULL,
	site_code varchar(16),
	notebook varchar(8),
	experiment varchar(4),
	username varchar(50),
	owner_username varchar(50),
	look_n_feel varchar(10),
	page_status varchar(15),
	creation_date timestamp with time zone,
	modified_date timestamp with time zone,
	xml_metadata xml,
	procedure text DEFAULT EMPTY_CLOB(),
	page_version smallint,
	latest_version varchar(1),
	pdf_document bytea DEFAULT empty_blob(),
	spid varchar(32),
	ta_code varchar(10),
	project_code varchar(54),
	literature_ref varchar(1800),
	subject varchar(1000),
	series_id varchar(15),
	protocol_id varchar(25),
	migrated_to_pcen varchar(2) DEFAULT 'N',
	batch_owner varchar(50),
	batch_creator varchar(50),
	design_submitter varchar(50),
	nbk_ref_version varchar(16),
	version bigint DEFAULT 0,
	yield smallint,
	issuccessful varchar(1)
);
ALTER TABLE cen_pages ADD UNIQUE (nbk_ref_version);
ALTER TABLE cen_pages ADD PRIMARY KEY (page_key);
CREATE INDEX cen_pages_i6 ON cen_pages (project_code);
CREATE INDEX cen_pages_i11 ON cen_pages ();
CREATE INDEX cen_pages_i3 ON cen_pages (site_code,username);
CREATE INDEX cen_pages_i8 ON cen_pages (subject);
CREATE INDEX cen_pages_i9 ON cen_pages (look_n_feel);
CREATE INDEX cen_pages_i5 ON cen_pages (ta_code);
CREATE INDEX cen_pages_i4 ON cen_pages ();
CREATE INDEX cen_pages_i12 ON cen_pages (spid);
CREATE INDEX cen_pages_xml_lit_ref ON cen_pages ();
CREATE INDEX cen_pages_i10 ON cen_pages (page_status);
CREATE INDEX cen_pages_i1 ON cen_pages (site_code,notebook,experiment);

CREATE TABLE cen_registered_batches (
	reg_batch_key varchar(256) NOT NULL,
	page_key varchar(256),
	batch_key varchar(256),
	conversational_batch_number varchar(32),
	parent_batch_number varchar(32),
	batch_tracking_id bigint,
	job_id bigint,
	registration_status varchar(32),
	submission_status varchar(32),
	status varchar(32),
	xml_metadata xml,
	compound_aggregation_status varchar(256),
	cmpd_aggregation_status_msg varchar(256),
	purification_service_status varchar(256),
	pur_service_status_msg varchar(256),
	compound_registration_offset bigint,
	compound_management_status varchar(256),
	compound_mgmt_status_message varchar(256),
	compound_reg_status_message varchar(256),
	melt_point_val_lower bigint,
	melt_point_val_upper bigint,
	melt_point_comments varchar(400),
	supplier_code varchar(12),
	supplier_registry_number varchar(70),
	source_code varchar(10),
	source_detail_code varchar(10),
	batch_comments varchar(1400),
	compound_state varchar(12),
	batch_hazard_comment varchar(240),
	batch_handling_comment varchar(200),
	batch_storage_comment varchar(500),
	protection_code varchar(5),
	continue_status varchar(15),
	selectivity_status varchar(15),
	hit_id varchar(30),
	registration_date timestamp with time zone,
	vnv_status varchar(15),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp,
	batch_owner varchar(50),
	product_flag varchar(1),
	intermediate_or_test varchar(20) DEFAULT 'U'
);
ALTER TABLE cen_registered_batches ADD PRIMARY KEY (reg_batch_key);
ALTER TABLE cen_registered_batches ADD CONSTRAINT check_intermediate_or_test CHECK (INTERMEDIATE_OR_TEST IN ('Intermediate', 'Test Compound', 'U', 'N'));
CREATE UNIQUE INDEX cen_registered_batches_idx ON cen_registered_batches (batch_key);
CREATE INDEX cen_registered_batches_i2 ON cen_registered_batches (job_id);

CREATE TABLE dr$idx_procedure$k (
	docid bigint,
	textkey oid NOT NULL
);
ALTER TABLE dr$idx_procedure$k ADD PRIMARY KEY (textkey);


CREATE TABLE cen_properties (
	site_code varchar(16) NOT NULL,
	enabled_flag varchar(5),
	xml_metadata xml,
	reagent_db_properties xml,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_properties ADD PRIMARY KEY (site_code);


CREATE TABLE cen_analysis (
	analysis_key varchar(256) NOT NULL,
	page_key varchar(256),
	xml_metadata xml,
	blob_data bytea DEFAULT EMPTY_BLOB(),
	cen_sample_ref varchar(256),
	analytical_service_sample_ref varchar(256),
	annotation varchar(140),
	comments varchar(200),
	site_code varchar(16),
	cyber_lab_domain_id varchar(38),
	cyber_lab_file_id varchar(38),
	cyber_lab_folder_id varchar(38),
	cyber_lab_lcdf_id varchar(38),
	cyber_lab_user_id varchar(30),
	domain varchar(10),
	server varchar(100),
	url varchar(100),
	user_id varchar(30),
	analytical_version bigint,
	instrument varchar(34),
	instrument_type varchar(20),
	file_name varchar(500),
	file_size bigint,
	file_type varchar(10),
	experiment_time varchar(30),
	experiment varchar(900),
	group_id varchar(50),
	ip_related varchar(1),
	is_linked varchar(1),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_analysis ADD PRIMARY KEY (analysis_key);
CREATE INDEX cen_analysis_i1 ON cen_analysis (page_key);

CREATE TABLE cen_attachements (
	attachement_key varchar(256) NOT NULL,
	page_key varchar(256),
	xml_metadata xml,
	blob_data bytea DEFAULT EMPTY_BLOB(),
	date_modified varchar(30),
	document_description varchar(400),
	document_name varchar(256),
	ip_related varchar(1),
	original_file_name varchar(512),
	document_size bigint,
	document_type varchar(30),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_attachements ADD PRIMARY KEY (attachement_key);
CREATE INDEX cen_attachements_i1 ON cen_attachements (page_key);

CREATE TABLE cen_step_batch_lists (
	step_key varchar(256),
	list_key varchar(256),
	position varchar(3),
	page_key varchar(256),
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
CREATE INDEX cen_step_batch_lists_i3 ON cen_step_batch_lists (page_key);
CREATE INDEX cen_step_batch_lists_i1 ON cen_step_batch_lists (step_key);
CREATE INDEX cen_step_batch_lists_i2 ON cen_step_batch_lists (list_key);

CREATE TABLE tgv1 (
	compound text,
	str_id bigint NOT NULL
);


CREATE TABLE cen_log (
	id bigint NOT NULL,
	timestamp timestamp,
	message text,
	app_version bigint,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_log ADD PRIMARY KEY (id);
CREATE INDEX cen_log_last_modified ON cen_log ();

CREATE TABLE cen_report_templates (
	template_id bigint NOT NULL,
	template_name varchar(256),
	description varchar(256),
	hb_version bigint,
	major_version bigint,
	minor_version bigint,
	report_template xml,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_report_templates ADD PRIMARY KEY (template_id);
ALTER TABLE cen_report_templates ADD UNIQUE (template_name,major_version,minor_version);


CREATE TABLE cen_batches (
	batch_key varchar(256) NOT NULL,
	page_key varchar(256),
	batch_number varchar(30),
	struct_key varchar(256),
	xml_metadata xml,
	step_key varchar(256),
	batch_type varchar(32),
	molecular_formula varchar(100),
	theoritical_yield_percent bigint,
	salt_code varchar(5),
	salt_equivs bigint,
	list_key varchar(256),
	batch_mw_value bigint,
	batch_mw_unit_code varchar(5),
	batch_mw_is_calc char(1) DEFAULT 'Y',
	batch_mw_sig_digits bigint,
	batch_mw_sig_digits_set char(1) DEFAULT 'Y',
	batch_mw_user_pref_figs bigint,
	is_limiting varchar(1) DEFAULT 'N',
	auto_calc varchar(1),
	synthszd_by varchar(50),
	added_solv_batch_key varchar(256),
	no_of_times_used bigint,
	intd_addition_order bigint,
	chloracnegen_type varchar(20),
	is_chloracnegen varchar(1),
	tested_for_chloracnegen varchar(1) DEFAULT 'N',
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_batches ADD PRIMARY KEY (batch_key);
CREATE INDEX cen_batches_i5 ON cen_batches (struct_key);
CREATE INDEX cen_batches_i10 ON cen_batches (list_key);
CREATE INDEX cen_batches_i7 ON cen_batches (theoritical_yield_percent);
CREATE INDEX cen_batches_i1 ON cen_batches (page_key);
CREATE INDEX cen_batches_i9 ON cen_batches (step_key);
CREATE INDEX cen_batches_xml_purity ON cen_batches ();
CREATE INDEX cen_batches_i3 ON cen_batches (molecular_formula);
CREATE INDEX cen_batches_i2 ON cen_batches (batch_number);
CREATE INDEX cen_batches_i8 ON cen_batches (batch_type);

CREATE TABLE cen_reg_jobs (
	job_id bigint NOT NULL,
	plate_key varchar(64),
	compound_registration_status varchar(25),
	modified_date timestamp with time zone,
	compound_reg_submission_date timestamp with time zone,
	compound_reg_status_message varchar(2000),
	compound_management_status varchar(25),
	compound_mgmt_status_message varchar(2000),
	purification_service_status varchar(25),
	pur_service_status_msg varchar(2000),
	compound_aggregation_status varchar(25),
	cmpd_aggregation_status_msg varchar(2000),
	callback_url varchar(256),
	page_key varchar(256),
	compound_registration_job_id varchar(20),
	batch_keys text,
	plate_keys text,
	workflow varchar(100),
	status varchar(16),
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_reg_jobs ADD PRIMARY KEY (job_id);
CREATE INDEX cen_reg_jobs_idx_page_key ON cen_reg_jobs (page_key);
CREATE INDEX cen_reg_jobs_idx_status ON cen_reg_jobs (status);
CREATE INDEX cen_reg_jobs_idx_platekey ON cen_reg_jobs (plate_key);

CREATE TABLE cen_reaction_schemes (
	rxn_scheme_key varchar(256) NOT NULL,
	page_key varchar(256),
	reaction_type varchar(10),
	rxn_sketch bytea DEFAULT EMPTY_BLOB(),
	native_rxn_sketch bytea DEFAULT EMPTY_BLOB(),
	sketch_image bytea DEFAULT EMPTY_BLOB(),
	xml_metadata xml,
	vrxn_id varchar(512),
	protocol_id varchar(32),
	rxn_skth_frmt varchar(15),
	native_rxn_skth_frmt varchar(15),
	rxn_image_frmt varchar(15),
	synth_route_ref varchar(20),
	reaction_id varchar(20),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_reaction_schemes ADD PRIMARY KEY (rxn_scheme_key);
CREATE INDEX cen_reaction_schemes_i4 ON cen_reaction_schemes (protocol_id);
CREATE INDEX cen_reaction_schemes_i1 ON cen_reaction_schemes (page_key);
CREATE INDEX cen_reaction_schemes_i3 ON cen_reaction_schemes (vrxn_id);

CREATE TABLE tgb1 (
	compound text,
	str_id bigint NOT NULL
);
ALTER TABLE tgb1 ADD PRIMARY KEY (str_id);


CREATE TABLE cen_batch_amounts (
	batch_key varchar(256),
	page_key varchar(256),
	weight_value bigint,
	weight_unit_code varchar(5),
	weight_is_calc char(1) DEFAULT 'Y',
	weight_sig_digits bigint,
	weight_sig_digits_set char(1) DEFAULT 'Y',
	weight_user_pref_figs bigint,
	volume_value bigint,
	volume_unit_code varchar(5),
	volume_is_calc char(1) DEFAULT 'Y',
	volume_sig_digits bigint,
	volume_sig_digits_set char(1) DEFAULT 'Y',
	volume_user_pref_figs bigint,
	molarity_value bigint,
	molarity_unit_code varchar(5),
	molarity_is_calc char(1) DEFAULT 'Y',
	molarity_sig_digits bigint,
	molarity_sig_digits_set char(1) DEFAULT 'Y',
	molarity_user_pref_figs bigint,
	mole_value bigint,
	mole_unit_code varchar(5),
	mole_is_calc char(1) DEFAULT 'Y',
	mole_sig_digits bigint,
	mole_sig_digits_set char(1) DEFAULT 'Y',
	mole_user_pref_figs bigint,
	density_value bigint,
	density_unit_code varchar(5),
	density_is_calc char(1) DEFAULT 'Y',
	density_sig_digits bigint,
	density_sig_digits_set char(1) DEFAULT 'Y',
	density_user_pref_figs bigint,
	purity_value bigint,
	purity_unit_code varchar(5),
	purity_is_calc char(1) DEFAULT 'Y',
	purity_sig_digits bigint,
	purity_sig_digits_set char(1) DEFAULT 'Y',
	purity_user_pref_figs bigint,
	loading_value bigint,
	loading_unit_code varchar(5),
	loading_is_calc char(1) DEFAULT 'Y',
	loading_sig_digits bigint,
	loading_sig_digits_set char(1) DEFAULT 'Y',
	loading_user_pref_figs bigint,
	rxnequivs_value bigint,
	rxnequivs_unit_code varchar(5),
	rxnequivs_is_calc char(1) DEFAULT 'Y',
	rxnequivs_sig_digits bigint,
	rxnequivs_sig_digits_set char(1) DEFAULT 'Y',
	rxnequivs_user_pref_figs bigint,
	theo_wt_value bigint,
	theo_wt_unit_code varchar(5),
	theo_wt_is_calc char(1) DEFAULT 'Y',
	theo_wt_sig_digits bigint,
	theo_wt_sig_digits_set char(1) DEFAULT 'Y',
	theo_wt_user_pref_figs bigint,
	theo_mole_value bigint,
	theo_mole_unit_code varchar(5),
	theo_mole_is_calc char(1) DEFAULT 'Y',
	theo_mole_sig_digits bigint,
	theo_mole_sig_digits_set char(1) DEFAULT 'Y',
	theo_mole_user_pref_figs bigint,
	total_wt_value bigint,
	total_wt_unit_code varchar(5),
	total_wt_is_calc char(1) DEFAULT 'Y',
	total_wt_sig_digits bigint,
	total_wt_sig_digits_set char(1) DEFAULT 'Y',
	total_wt_user_pref_figs bigint,
	total_vol_value bigint,
	total_vol_unit_code varchar(5),
	total_vol_is_calc char(1) DEFAULT 'Y',
	total_vol_sig_digits bigint,
	total_vol_sig_digits_set char(1) DEFAULT 'Y',
	total_vol_user_pref_figs bigint,
	deliv_wt_value bigint,
	deliv_wt_unit_code varchar(5),
	deliv_wt_is_calc char(1) DEFAULT 'Y',
	deliv_wt_sig_digits bigint,
	deliv_wt_sig_digits_set char(1) DEFAULT 'Y',
	deliv_wt_user_pref_figs bigint,
	deliv_vol_value bigint,
	deliv_vol_unit_code varchar(5),
	deliv_vol_is_calc char(1) DEFAULT 'Y',
	deliv_vol_sig_digits bigint,
	deliv_vol_sig_digits_set char(1) DEFAULT 'Y',
	deliv_vol_user_pref_figs bigint,
	needed_mole_value bigint,
	needed_mole_unit_code varchar(5),
	needed_mole_is_calc char(1) DEFAULT 'Y',
	needed_mole_sig_digits bigint,
	needed_mole_sig_digits_set char(1) DEFAULT 'Y',
	needed_mole_user_pref_figs bigint,
	ex_neded_mole_value bigint,
	ex_neded_mole_unit_code varchar(5),
	ex_neded_mole_is_calc char(1) DEFAULT 'Y',
	ex_neded_mole_sig_digits bigint,
	ex_neded_mole_sig_digits_set char(1) DEFAULT 'Y',
	ex_neded_mole_user_pref_figs bigint,
	solute_wt_value bigint,
	solute_wt_unit_code varchar(5),
	solute_wt_is_calc char(1) DEFAULT 'Y',
	solute_wt_sig_digits bigint,
	solute_wt_sig_digits_set char(1) DEFAULT 'Y',
	solute_wt_user_pref_figs bigint,
	prev_molar_value bigint,
	prev_molar_unit_code varchar(5),
	prev_molar_is_calc char(1) DEFAULT 'Y',
	prev_molar_sig_digits bigint,
	prev_molar_sig_digits_set char(1) DEFAULT 'Y',
	prev_molar_user_pref_figs bigint,
	theo_yld_pcnt_value bigint,
	theo_yld_pcnt_unit_code varchar(5),
	theo_yld_pcnt_is_calc char(1) DEFAULT 'Y',
	theo_yld_pcnt_sig_digits bigint,
	theo_yld_pcnt_sig_digits_set char(1) DEFAULT 'Y',
	theo_yld_pcnt_user_pref_figs bigint,
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
CREATE INDEX cen_batch_amounts_i1 ON cen_batch_amounts (batch_key);
CREATE INDEX cen_batch_amounts_i2 ON cen_batch_amounts (page_key);

CREATE TABLE cen_user_sessions (
	session_token varchar(100) NOT NULL,
	username varchar(50),
	lease_start_time timestamp,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_user_sessions ADD PRIMARY KEY (session_token);


CREATE TABLE cen_users (
	username varchar(64) NOT NULL,
	password varchar(256),
	xml_metadata text,
	my_reagents text,
	fullname varchar(256),
	email varchar(256),
	site_code varchar(16),
	status varchar(16),
	privilege_list varchar(1024),
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0,
	audit_log text
);
ALTER TABLE cen_users ADD PRIMARY KEY (username);
CREATE INDEX cen_users_i1 ON cen_users (site_code,username);

CREATE TABLE cen_cro_pageinfo (
	page_key varchar(256) NOT NULL,
	vendor_id varchar(50) NOT NULL,
	vendor_display_name varchar(50),
	vendor_chemist_id varchar(50),
	vendor_chemist_display_name varchar(50),
	vendor_application_source varchar(50),
	request_id varchar(25) NOT NULL,
	xml_metadata xml,
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_cro_pageinfo ADD PRIMARY KEY (page_key);


CREATE TABLE tmp_log (
	id bigint NOT NULL,
	log varchar(4000),
	str_id bigint
);
ALTER TABLE tmp_log ADD PRIMARY KEY (id);


CREATE TABLE cen_metrics (
	log_seq_number bigint NOT NULL,
	application_name varchar(50),
	sub_function_name varchar(50),
	when_used timestamp,
	account_name varchar(50),
	site_code varchar(16),
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_metrics ADD PRIMARY KEY (log_seq_number);


CREATE TABLE cen_notebooks (
	site_code varchar(16) NOT NULL,
	username varchar(50) NOT NULL,
	notebook varchar(8) NOT NULL,
	status varchar(15),
	xml_metadata xml,
	id bigint,
	version bigint,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_notebooks ADD PRIMARY KEY (site_code,username,notebook);


CREATE TABLE cen_plate (
	plate_key varchar(256) NOT NULL,
	plate_bar_code varchar(12),
	cen_plate_type varchar(15),
	page_key varchar(256),
	step_key varchar(256),
	plate_number varchar(25),
	registered_date timestamp,
	parent_plate_key varchar(256),
	container_key varchar(256),
	comments varchar(100),
	version bigint DEFAULT 0,
	last_modified timestamp with time zone DEFAULT systimestamp
);
ALTER TABLE cen_plate ADD PRIMARY KEY (plate_key);
CREATE INDEX cen_plate_i4 ON cen_plate (plate_number);
CREATE INDEX cen_plate_i2 ON cen_plate (step_key);
CREATE INDEX cen_plate_i1 ON cen_plate (page_key);
CREATE INDEX cen_plate_i3 ON cen_plate (plate_bar_code);

CREATE TABLE cen_procedure_images (
	image_key varchar(255) NOT NULL,
	page_key varchar(256),
	image_type varchar(255),
	image_data bytea DEFAULT EMPTY_BLOB()
);
ALTER TABLE cen_procedure_images ADD PRIMARY KEY (image_key);
CREATE INDEX cen_pi_idx_page_key ON cen_procedure_images (page_key);

CREATE TABLE cen_lists (
	list_key varchar(256) NOT NULL,
	list_name varchar(50),
	last_modified timestamp with time zone DEFAULT systimestamp,
	version bigint DEFAULT 0
);
ALTER TABLE cen_lists ADD PRIMARY KEY (list_key);

ALTER TABLE cen_reaction_steps ADD CONSTRAINT cen_reaction_steps_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_structures ADD CONSTRAINT cen_structures_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_pages ADD CONSTRAINT cen_pages_fk1 FOREIGN KEY (site_code,username,notebook) REFERENCES cen_notebooks(site_code,username,notebook) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_registered_batches ADD CONSTRAINT cen_registered_batches_fk2 FOREIGN KEY (batch_key) REFERENCES cen_batches(batch_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_registered_batches ADD CONSTRAINT cen_registered_batches_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_analysis ADD CONSTRAINT cen_analysis_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_attachements ADD CONSTRAINT cen_attachements_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_step_batch_lists ADD CONSTRAINT cen_step_batch_lists_fk2 FOREIGN KEY (list_key) REFERENCES cen_lists(list_key) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_step_batch_lists ADD CONSTRAINT cen_step_batch_lists_fk3 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_step_batch_lists ADD CONSTRAINT cen_step_batch_lists_fk1 FOREIGN KEY (step_key) REFERENCES cen_reaction_steps(step_key) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_batches ADD CONSTRAINT cen_batches_fk2 FOREIGN KEY (list_key) REFERENCES cen_lists(list_key) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_batches ADD CONSTRAINT cen_batches_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_reg_jobs ADD CONSTRAINT cen_reg_jobs_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_reaction_schemes ADD CONSTRAINT cen_reaction_schemes_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_batch_amounts ADD CONSTRAINT cen_batch_amounts_fk1 FOREIGN KEY (batch_key) REFERENCES cen_batches(batch_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_batch_amounts ADD CONSTRAINT cen_batch_amounts_fk2 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_cro_pageinfo ADD CONSTRAINT cen_cropageinfo_fk FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_plate ADD CONSTRAINT cen_plate_fk1 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_plate ADD CONSTRAINT cen_plate_fk4 FOREIGN KEY (parent_plate_key) REFERENCES cen_plate(plate_key) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE cen_plate ADD CONSTRAINT cen_plate_fk2 FOREIGN KEY (step_key) REFERENCES cen_reaction_steps(step_key) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE cen_procedure_images ADD CONSTRAINT cen_procedure_images_fk2 FOREIGN KEY (page_key) REFERENCES cen_pages(page_key) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
